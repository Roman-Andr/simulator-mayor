plugins {
    id("com.github.johnrengelman.shadow")
}

dependencies {
    compileOnly("ru.cristalix.core:microservice:1.0.12-3")
    compileOnly("me.func:service-api:2.0.0-SNAPSHOT")

    implementation(project(":protocol"))

    implementation('org.mongodb:mongodb-driver-async:3.12.11')
    implementation('org.mongodb:mongodb-driver:3.12.11')

    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.4')
    implementation('io.netty:netty-all:4.1.86.Final')
    implementation('com.google.code.gson:gson:2.10.1')
    implementation("it.unimi.dsi:fastutil:8.5.11")
    implementation('com.google.guava:guava:23.0')

}

remotes {
    webServer {
        host = System.getenv("CRI_HOST")
        user = System.getenv("CRI_HOST_USERNAME")
        knownHosts = allowAnyHosts
        identity = file(System.getenv("CRI_HOST_SSHKEY_PATH") ?: "key")
        passphrase = System.getenv("CRI_HOST_PASSPHRASE")
    }
}

tasks {
    build { dependsOn(shadowJar) }
    jar { enabled = false }
    shadowJar {
        archiveFileName.set("construction-service.jar")
        configurations = [project.configurations.compileClasspath]
        manifest {
            attributes["Main-Class"] = "me.slavita.construction.service.MainKt"
            attributes["Multi-Release"] = true
        }
    }
}

task upload {
    dependsOn(tasks.shadowJar)
    doLast {
        ssh.run {
            session(remotes.webServer) {
                put from: project(":service").tasks.shadowJar.getArchiveFile().get().asFile.path, into: "/home/" + System.getenv("CRI_HOST_USERNAME") + "/construction/service/"
            }
        }
    }
}

repositories {
    mavenCentral()
}
